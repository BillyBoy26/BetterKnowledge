<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>BetterKnowledge homepage</title>

<div >
    <section >
        <h1>
            Bienvenu sur BetterKnowledge
        </h1>

    </section>
    <ul>
        <li>
            <%= user.displayName %>
        </li>
        <li>
            <a href="/logout">Logout</a>
        </li>
    </ul>
</div>



<!-- 1. The Gruveo embed's <iframe> will replace this <div> tag. -->
<div id="myembed"></div>
<script>
    // 2. This code loads the Gruveo Embed API code asynchronously.
    var tag = document.createElement("script");
    tag.src = "https://www.gruveo.com/embed-api/";
    var firstScriptTag = document.getElementsByTagName("script")[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


    console.log('initEmbed');
    // 3. This function gets called after the API code downloads. It creates
    //    the actual Gruveo embed (the <iframe>) and wires up the event
    //    handlers.
    var embed;
    function onGruveoEmbedAPIReady() {
        console.log('onGruveoEmbedAPIReady');
        var generated =<%- JSON.stringify(generated) %>;
        var signature =<%- JSON.stringify(signature) %>;
        embed = new Gruveo.Embed("myembed", {
            width: 680,
            height: 465,
            embedParams: {
                generated: generated,
                signature: signature,
                color: "63b2de"
    }
    });

    embed
            .on("ready", onEmbedReady)
            .on("stateChange", onEmbedStateChange);
    }
    console.log('event listen');

    // 4. This function will get called by the API when the embed is ready.
    function onEmbedReady(e) {
        embed.call("mycode123", true);
    }

    // 5. The API will call this function when the embed's state changes.
    //    The function indicates that after a call is established
    //    (state == "call"), the embed should hang up after 10 seconds.
    function onEmbedStateChange(e) {
        if (e.state == "call") {
            setTimeout(endCall, 10000);
        }
    }
    function endCall() {
        embed.end();
    }
    console.log('end script');
</script>

<body >




</body>

</html>

